//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MikhaleuLibrary.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MikhaleuLibrary.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database Error.
        /// </summary>
        internal static string DatabaseErrorDescription {
            get {
                return ResourceManager.GetString("DatabaseErrorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to save library data in the database. Try again.
        /// </summary>
        internal static string DatabaseSaveError {
            get {
                return ResourceManager.GetString("DatabaseSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory creation fault.
        /// </summary>
        internal static string DirectoryCreationFaultCaption {
            get {
                return ResourceManager.GetString("DirectoryCreationFaultCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s name can&apos;t be empty.
        /// </summary>
        internal static string EmptyAuthorNameMessage {
            get {
                return ResourceManager.GetString("EmptyAuthorNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s surname can&apos;t be empty.
        /// </summary>
        internal static string EmptyAuthorSurnameMessage {
            get {
                return ResourceManager.GetString("EmptyAuthorSurnameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s birthdate can&apos;t be empty.
        /// </summary>
        internal static string EmptyBirthdateMessage {
            get {
                return ResourceManager.GetString("EmptyBirthdateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Book name can&apos;t be empty.
        /// </summary>
        internal static string EmptyBookNameMessage {
            get {
                return ResourceManager.GetString("EmptyBookNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Book year can&apos;t be empty.
        /// </summary>
        internal static string EmptyBookYearMessage {
            get {
                return ResourceManager.GetString("EmptyBookYearMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File with books data: .
        /// </summary>
        internal static string FileNameDeclaration {
            get {
                return ResourceManager.GetString("FileNameDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s birthdate can&apos;t be later than the current date.
        /// </summary>
        internal static string FutureAuthorBirthdateMessage {
            get {
                return ResourceManager.GetString("FutureAuthorBirthdateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Book year can&apos;t be later than the current year.
        /// </summary>
        internal static string FutureBookYearMessage {
            get {
                return ResourceManager.GetString("FutureBookYearMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One or more data about the book is missing.
        /// </summary>
        internal static string LackOfParamsMessage {
            get {
                return ResourceManager.GetString("LackOfParamsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Book year must be an integer.
        /// </summary>
        internal static string NonIntegerYearMessage {
            get {
                return ResourceManager.GetString("NonIntegerYearMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Read from file error.
        /// </summary>
        internal static string ReadFromFileErrorDescription {
            get {
                return ResourceManager.GetString("ReadFromFileErrorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to read from source file with library data. Try again.
        /// </summary>
        internal static string ReadFromSourceFileFault {
            get {
                return ResourceManager.GetString("ReadFromSourceFileFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The information about the books was successfully recorded in the database. Full information about errors that occurred during recording is in the file .
        /// </summary>
        internal static string SuccessfulDBWriteMessage {
            get {
                return ResourceManager.GetString("SuccessfulDBWriteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success!.
        /// </summary>
        internal static string SuccessMessage {
            get {
                return ResourceManager.GetString("SuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to create directory for file with errors of reading from source file with library data. Try again.
        /// </summary>
        internal static string UnableToCreateDirectoryMessage {
            get {
                return ResourceManager.GetString("UnableToCreateDirectoryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred when writing data to a file with errors. Try again.
        /// </summary>
        internal static string WriteToErrorsFileFault {
            get {
                return ResourceManager.GetString("WriteToErrorsFileFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Write to file error.
        /// </summary>
        internal static string WriteToFileErrorDescription {
            get {
                return ResourceManager.GetString("WriteToFileErrorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s birthdate has incorrect format.
        /// </summary>
        internal static string WrongBirthdateConversionMessage {
            get {
                return ResourceManager.GetString("WrongBirthdateConversionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, choose file from which you want to select data.
        /// </summary>
        internal static string WrongClicksOrderMessage {
            get {
                return ResourceManager.GetString("WrongClicksOrderMessage", resourceCulture);
            }
        }
    }
}
